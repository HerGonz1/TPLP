#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#define TAMANO 16

typedef struct
{
    char palabra[TAMANO];
    int longitud;
} Palabra;

void cargarPalabrasDesdeArchivo(const char *nombreArchivo, Palabra *palabras, int *numPalabras);
void inicializarCrucigrama(char crucigrama[TAMANO][TAMANO]);
void mostrarCrucigrama(char crucigrama[TAMANO][TAMANO]);
int intentarColocarPalabra(char palabra[TAMANO], int fila, int columna, char direccion, char crucigrama[TAMANO][TAMANO]);

int main()
{
    Palabra palabras[TAMANO];
    int numPalabras = 0;
    char crucigrama[TAMANO][TAMANO];

    srand((unsigned int)time(NULL));

    // Cargar palabras desde el archivo
    FILE *archivo = fopen("palabras.txt", "r");
    if (archivo == NULL)
    {
        printf("No se pudo abrir el archivo palabras.txt.\n");
        return 1;
    }

    while (fscanf(archivo, "%[^,],", palabras[numPalabras].palabra) == 1)
    {
        palabras[numPalabras].longitud = strlen(palabras[numPalabras].palabra);
        numPalabras++;
    }

    fclose(archivo);

    // Inicializar el crucigrama
    for (int i = 0; i < TAMANO; i++)
    {
        for (int j = 0; j < TAMANO; j++)
        {
            crucigrama[i][j] = '_';
        }
    }

    // Colocar las palabras en el crucigrama
    for (int i = 0; i < numPalabras; i++)
    {
        char direccion = (rand() % 2 == 0) ? 'H' : 'V';
        int fila, columna;

        int intentos = 0;
        do
        {
            fila = rand() % TAMANO;
            columna = rand() % TAMANO;
            intentos++;
        } while (!intentarColocarPalabra(palabras[i].palabra, fila, columna, direccion, crucigrama) && intentos < 100);

        if (intentos >= 100)
        {
            printf("No se pudo colocar la palabra '%s' en el crucigrama.\n", palabras[i].palabra);
            continue;
        }

        for (int j = 0; j < palabras[i].longitud; j++)
        {
            crucigrama[(direccion == 'H') ? fila : fila + j][(direccion == 'H') ? columna + j : columna] = palabras[i].palabra[j];
        }
    }

    // Mostrar el crucigrama
    printf("Crucigrama:\n");
    for (int i = 0; i < TAMANO; i++)
    {
        for (int j = 0; j < TAMANO; j++)
        {
            printf("%c ", crucigrama[i][j]);
        }
        printf("\n");
    }

    return 0;
}

int intentarColocarPalabra(char palabra[TAMANO], int fila, int columna, char direccion, char crucigrama[TAMANO][TAMANO])
{
    int longitud = strlen(palabra);

    if ((direccion == 'H' && columna + longitud <= TAMANO) || (direccion == 'V' && fila + longitud <= TAMANO))
    {
        int cruzada = 0;

        for (int i = 0; i < longitud; i++)
        {
            char c = crucigrama[(direccion == 'H') ? fila : fila + i][(direccion == 'H') ? columna + i : columna];
            if (c != '_' && c != palabra[i])
            {
                cruzada = 1;
                break;
            }
        }

        if (!cruzada)
        {
            return 1;
        }
    }

    return 0;
}
